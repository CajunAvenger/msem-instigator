class ConditionIsStaple < Condition
	def search(db)
		names = [
			"wayfarer's shrine",
			"sealed riftway",
			"valdez, leafdown vagabond",
			"shifting cascade",
			"cosmic sinkhole",
			"shifting glade",
			"confirm hypothesis",
			"sigil of radiance",
			"resplendent substratum",
			"mirrorgate",
			"shifting grove",
			"amber hills",
			"obscoriate",
			"mysterious cataract",
			"shal'draen's rage",
			"conjure realities",
			"sedate tundra",
			"pith wilt",
			"sacrificial bull",
			"solar flare",
			"anzen, beyond the sea",
			"timber range",
			"hungering cult",
			"nebula of empty gold",
			"logger recluse",
			"cursory glance",
			"harm's way",
			"infectious ego",
			"arctic mine",
			"thought blossom",
			"zaukar of the ancient ways",
			"prying inquiry",
			"pool of light",
			"shifting canyon",
			"flooded depths",
			"mpumo, who stands alone",
			"tenuous existence",
			"magmatic torrent",
			"polyp pools",
			"crumbling precipice",
			"lush oasis",
			"monkeyshines",
			"journey's end",
			"shifting crag",
			"still the pandemonium",
			"portal fracture",
			"shifting morass",
			"voidflare",
			"bounty of the gardens",
			"end of all things",
			"social graces",
			"stolen secrets",
			"recall forgotten eons",
			"nereba, sandchoked archives",
			"tiny heroine totti",
			"exeunt",
			"gloomcover steppe",
			"aerie's pillar",
			"bind the mind",
			"murmuring falls",
			"rini, sundial archcleric",
			"pay up",
			"a flawless world",
			"bessie's brood",
			"prodigious panya",
			"scorch",
			"lumbering hillock",
			"fiery burst",
			"many-voiced tower",
			"setting sun",
			"profane emissary",
			"consult ancient knowledge",
			"rahstahde's command",
			"cane dancer",
			"tal, locus sentry",
			"metal munch",
			"antimagic",
			"civilization's cost",
			"nature's claim",
			"forked pillar",
			"heart of the glade",
			"admonish",
			"rapacious rattler",
			"inishtu, desert healer",
			"caulte axeslinger",
			"anointed cursebreaker",
			"shugenja sanctuary",
			"coralight champion",
			"crewmaster gillo",
			"lord rokai",
]

		names
			.map{|n| db.cards[n]}
			.flat_map{|card| card ? card.printings : []}
			.to_set
	end

	def to_s
		"is:staple"
	end
end